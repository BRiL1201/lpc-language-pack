'scopeName': 'text.html.basic'
'fileTypes': [
  'ejs'
  'htm'
  'html'
  'kit'
  'shtml'
  'tmpl'
  'tpl'
  'xhtml'
]
'firstLineMatch': '''(?xi)
  # Document type definition
  <(?:!DOCTYPE\\s*)?html
  |
  # Emacs modeline
  -\\*-(?:\\s*(?=[^:;\\s]+\\s*-\\*-)|(?:.*?[;\\s]|(?<=-\\*-))mode\\s*:\\s*)
    html
  (?=[\\s;]|(?<![-*])-\\*-).*?-\\*-
  |
  # Vim modeline
  (?:(?:\\s|^)vi(?:m[<=>]?\\d+|m)?|\\sex)(?=:(?=\\s*set?\\s[^\\n:]+:)|:(?!\\s*set?\\s))(?:(?:\\s|\\s*:\\s*)\\w*(?:\\s*=(?:[^\\n\\\\\\s]|\\\\.)*)?)*[\\s:](?:filetype|ft|syntax)\\s*=
    x?html
  (?=\\s|:|$)
'''
'name': 'HTML'

'patterns': [
  {
    'include': '#lpc-tags'
  }
  {
    'begin': '(<)([a-zA-Z0-9:-]++)(?=[^>]*></\\2>)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tags.html'
      '2':
        'name': 'entity.name.tags.html'
    'end': '(>(\\s*<)/)(\\2)(>)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tags.html'
      '2':
        'name': 'meta.scope.between-tags-pair.html'
      '3':
        'name': 'entity.name.tags.html'
      '4':
        'name': 'punctuation.definition.tags.html'
    'name': 'meta.tags.any.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'include': '#lpc-tags'
      }
    ]
  }

  {
    'begin': '(<\\?)(xml)'
    'captures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.xml.html'
    'end': '(\\?>)'
    'name': 'meta.tag.preprocessor.xml.html'
    'patterns': [
      {
        'include': '#tag-generic-attribute'
      }
      {
        'include': '#string-double-quoted'
      }
      {
        'include': '#string-single-quoted'
      }
      {
        'include': '#lpc-tags'
      }
    ]
  }

  {
    'begin': '<!--'
    'captures':
      '0':
        'name': 'punctuation.definition.comment.html'
    'end': '--\\s*>'
    'name': 'comment.block.html'
    'patterns': [
      {
        'match': '--(?!-*\\s*>)'
        'name': 'invalid.illegal.bad-comments-or-CDATA.html'
      }
      {
        'include': '#embedded-code'
      }
      {
        'include': '#lpc-tags'
      }
    ]
  }

  {
    'begin': '<!'
    'captures':
      '0':
        'name': 'punctuation.definition.tag.html'
    'end': '>'
    'name': 'meta.tag.sgml.html'
    'patterns': [
      {
        'begin': '(?i:DOCTYPE)'
        'captures':
          '1':
            'name': 'entity.name.tag.doctype.html'
        'end': '(?=>)'
        'name': 'meta.tag.sgml.doctype.html'
        'patterns': [
          {
            'match': '"[^">]*"'
            'name': 'string.quoted.double.doctype.identifiers-and-DTDs.html'
          }
        ]
      }
      {
        'begin': '\\[CDATA\\['
        'end': ']](?=>)'
        'name': 'constant.other.inline-data.html'
      }
      {
        'match': '(\\s*)(?!--|>)\\S(\\s*)'
        'name': 'invalid.illegal.bad-comments-or-CDATA.html'
      }
    ]
  }
  {
    'include': '#embedded-code'
  }
  {
    'begin': '(?:^\\s+)?(<)((?i:style))\\b(?![^>]*/>)'
    'captures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.style.html'
      '3':
        'name': 'punctuation.definition.tag.html'
    'end': '(</)((?i:style))(>)(?:\\s*\\n)?'
    'name': 'source.css.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'include': '#lpc-tags'
      }
      {
        'begin': '(>)'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.tag.html'
        'end': '(?=</(?i:style))'
        'patterns': [
          {
            'include': '#embedded-code'
          }
          {
            'include': 'source.css'
          }
        ]
      }
    ]
  }

#BEGIN: Image Tag - This is to handle Image Tag stylings
  {
    'begin': '(?:^\\s+)?(<)((?i:img))\\b'
    'captures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.style.html'
      '3':
        'name': 'punctuation.definition.tag.html'
    'end': '(>)'
    'name': 'source.img.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'include': '#lpc-tags'
      }
    ]
  }
#END: Image Tag

#BEGIN: Anchor Tag - This is to handle Anchor (a) Tag Stylings
  {
    'begin': '(?:^\\s+)?(<)((?i:a )|(/a))\\b(?![^>]*/>)'
    'captures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.style.html'
      '3':
        'name': 'punctuation.definition.tag.html'
    'end': '(>)'
    'name': 'source.a.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'include': '#lpc-tags'
      }
    ]
  }
#END: Anchor Tag

#BEGIN: Table Tags - This is to handle Table, Th, TR, and TD Tag Stylings
  {
    'begin': '(?:^\\s+)?(<)((?i:table)|(?i:th)|(?i:tr)|(?i:td)|(?i:/table)|(?i:/th)|(?i:/tr)|(?i:/td))\\b(?![^>]*/>)'
    'captures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.style.html'
      '3':
        'name': 'punctuation.definition.tag.html'
    'end': '(>)'
    'name': 'source.table.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'include': '#lpc-tags'
      }
    ]
  }
#END: Table Tags

  {
    'begin': '(?:^\\s+)?(<)((?i:script))\\b(?=[^>]*\\btype\\s*=\\s*[\'"]?text/(x-handlebars|(x-(handlebars-)?|ng-)?template|html)[\'"]?)(?![^>]*/>)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.script.html'
    'end': '(?<=</(script|SCRIPT))(>)(?:\\s*\\n)?'
    'endCaptures':
      '2':
        'name': 'punctuation.definition.tag.html'
    'contentName': 'text.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'include': '#lpc-tags'
      }
      {
        'begin': '(?<!</(?:script|SCRIPT))(>)'
        'captures':
          '1':
            'name': 'punctuation.definition.tag.html'
          '2':
            'name': 'entity.name.tag.script.html'
        'end': '(</)((?i:script))'
        'patterns': [
          {
            'include': 'text.html.basic'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?:^\\s+)?(<)((?i:script))\\b(?=[^>]*\\btype\\s*=\\s*[\'"]?text/coffeescript[\'"]?)(?![^>]*/>)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.script.html'
    'end': '(?<=</(script|SCRIPT))(>)(?:\\s*\\n)?'
    'endCaptures':
      '2':
        'name': 'punctuation.definition.tag.html'
    'contentName': 'source.coffee.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'include': '#lpc-tags'
      }
      {
        'begin': '(?<!</(?:script|SCRIPT))(>)'
        'captures':
          '1':
            'name': 'punctuation.definition.tag.html'
          '2':
            'name': 'entity.name.tag.script.html'
        'end': '(</)((?i:script))'
        'patterns': [
          {
            'captures':
              '1':
                'name': 'punctuation.definition.comment.coffee'
            'match': '(#).*?((?=</script)|$\\n?)'
            'name': 'comment.line.number-sign.coffee'
          }
          {
            'include': 'source.coffee'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?:^\\s+)?(<)((?i:script))\\b(?![^>]*/>)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.script.html'
    'end': '(?<=</(script|SCRIPT))(>)(?:\\s*\\n)?'
    'endCaptures':
      '2':
        'name': 'punctuation.definition.tag.html'
    'contentName': 'source.js.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'include': '#lpc-tags'
      }
      {
        'begin': '(?<!</(?:script|SCRIPT))(>)'
        'captures':
          '1':
            'name': 'punctuation.definition.tag.html'
          '2':
            'name': 'entity.name.tag.script.html'
        'end': '(</)((?i:script))'
        'patterns': [
          {
            'captures':
              '1':
                'name': 'punctuation.definition.comment.js'
            'match': '(//).*?((?=</script)|$\\n?)'
            'name': 'comment.line.double-slash.js'
          }
          {
            'begin': '/\\*'
            'captures':
              '0':
                'name': 'punctuation.definition.comment.js'
            'end': '\\*/|(?=</script)'
            'name': 'comment.block.js'
          }
          {
            'include': 'source.js'
          }
        ]
      }
    ]
  }
  {
    'begin': '(</?)((?i:body|head|html)\\b)'
    'captures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.structure.any.html'
    'end': '(>)'
    'name': 'meta.tag.structure.any.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'include': '#lpc-tags'
      }
    ]
  }
  {
    'begin': '(</?)((?i:address|blockquote|dd|div|section|article|aside|header|footer|nav|menu|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|pre)\\b)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.begin.html'
      '2':
        'name': 'entity.name.tag.block.any.html'
    'end': '(>)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.end.html'
    'name': 'meta.tag.block.any.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'include': '#lpc-tags'
      }
    ]
  }
  {
    'begin': '(</?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)\\b)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.begin.html'
      '2':
        'name': 'entity.name.tag.inline.any.html'
    'end': '((?: ?/)?>)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.end.html'
    'name': 'meta.tag.inline.any.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'include': '#lpc-tags'
      }
    ]
  }
  {
    'begin': '(</?)([a-zA-Z0-9:-]+)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.begin.html'
      '2':
        'name': 'entity.name.tag.other.html'
    'end': '(>)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.end.html'
    'name': 'meta.tag.other.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'include': '#lpc-tags'
      }
    ]
  }
  {
    'include': '#entities'
  }
  {
    'match': '<>'
    'name': 'invalid.illegal.incomplete.html'
  }
]

'repository':
  'embedded-code':
    'patterns': [
      {
        'include': '#smarty'
      }
      {
        'include': '#python'
      }
    ]
  'entities':
    'patterns': [
      {
        'match': '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)'
        'captures':
          '1':
            'name': 'punctuation.definition.entity.begin.html'
          '2':
            'name': 'entity.name.entity.other.html'
          '3':
            'name': 'punctuation.definition.entity.end.html'
        'name': 'constant.character.entity.html'
      }
      {
        'match': '&'
        'name': 'invalid.illegal.bad-ampersand.html'
      }
    ]
  'python':
    'begin': '(?:^\\s*)<\\?python(?!.*\\?>)'
    'end': '\\?>(?:\\s*$\\n)?'
    'name': 'source.python.embedded.html'
    'patterns': [
      {
        'include': 'source.python'
      }
    ]
  'smarty':
    'patterns': [
      {
        'begin': '(\\{(literal)\\})'
        'captures':
          '1':
            'name': 'source.smarty.embedded.html'
          '2':
            'name': 'support.function.built-in.smarty'
        'end': '(\\{/(literal)\\})'
      }
      {
        'begin': '{{|{'
        'disabled': 1
        'end': '}}|}'
        'name': 'source.smarty.embedded.html'
        'patterns': [
          {
            'include': 'source.smarty'
          }
        ]
      }
    ]
  'string-double-quoted':
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.html'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.html'
    'name': 'string.quoted.double.html'
    'patterns': [
      {
        'include': '#embedded-code'
      }
      {
        'include': '#entities'
      }
      {
        'include': '#lpc-tags'
      }
    ]
  'string-single-quoted':
    'begin': '\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.html'
    'end': '\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.html'
    'name': 'string.quoted.single.html'
    'patterns': [
      {
        'include': '#embedded-code'
      }
      {
        'include': '#entities'
      }
      {
        'include': '#lpc-tags'
      }
    ]
  'tag-generic-attribute':
    'match': '(?<=[^=])\\b([a-zA-Z0-9:-]+)'
    'name': 'entity.other.attribute-name.html'
    'patterns': [
      {
        'include': '#lpc-tags'
      }
    ]

#BEGIN: ID Attribute - This is to handle ID Attribute Stylings
  'tag-id-attribute':
    'begin': '\\b(id)\\b\\s*(=)'
    'captures':
      '1':
        'name': 'entity.other.attribute-name.id.html'
      '2':
        'name': 'punctuation.separator.key-value.html'
    'end': '(?<=\'|")|(?=\\s|>)'
    'name': 'meta.attribute-with-value.id.html'
    'patterns': [
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.html'
        'contentName': 'meta.toc-list.id.html'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.html'
        'name': 'string.quoted.double.html'
        'patterns': [
          {
            'include': '#embedded-code'
          }
          {
            'include': '#entities'
          }
          {
            'include': '#lpc-tags'
          }
        ]
      }
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.html'
        'contentName': 'meta.toc-list.id.html'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.html'
        'name': 'string.quoted.single.html'
        'patterns': [
          {
            'include': '#embedded-code'
          }
          {
            'include': '#entities'
          }
          {
            'include': '#lpc-tags'
          }
        ]
      }
      {
        'include': '#unquoted-attribute'
      }
    ]
#END: ID Attribute

#BEGIN: CLASS Attribute - This is to handle CLASS Attribute Stylings
  'tag-class-attribute':
    'begin': '\\b(class)\\b\\s*(=)'
    'captures':
      '1':
        'name': 'class.html'
      '2':
        'name': 'punctuation.separator.key-value.html'
    'end': '(?<=\'|")|(?=\\s|>)'
    'name': 'meta.attribute-with-value.class.html'
    'patterns': [
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.html'
        'contentName': 'class'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.html'
        'name': 'string.quoted.double.html'
        'patterns': [
          {
            'include': '#lpc-tags'
          }
        ]
      }
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.html'
        'contentName': 'class'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.html'
        'name': 'string.quoted.single.html'
        'patterns': [
          {
            'include': '#lpc-tags'
          }
        ]
      }
      {
        'include': '#unquoted-attribute'
      }
    ]
#END: CLASS Attribute

#BEGIN: HREF Attribute - This is to handle HREF Attribute Stylings
  'tag-href-attribute':
    'begin': '\\b(href)\\b\\s*(=)'
    'captures':
      '1':
        'name': 'href.html'
      '2':
        'name': 'punctuation.separator.key-value.html'
    'end': '(?<=\'|")|(?=\\s|>)'
    'name': 'meta.attribute-with-value.href.html'
    'patterns': [
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.html'
        'contentName': 'href'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.html'
        'name': 'string.quoted.double.html'
        'patterns': [
          {
            'include': '#lpc-tags'
          }
        ]
      }
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.html'
        'contentName': 'href'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.html'
        'name': 'string.quoted.single.html'
        'patterns': [
          {
            'include': '#lpc-tags'
          }
        ]
      }
      {
        'include': '#unquoted-attribute'
      }
    ]
#END: HREF Attribute

#BEGIN: SRC Attribute - This is to handle SRC Attribute Stylings
  'tag-src-attribute':
    'begin': '\\b(src)\\b\\s*(=)'
    'captures':
      '1':
        'name': 'src.html'
      '2':
        'name': 'punctuation.separator.key-value.html'
    'end': '(?<=\'|")|(?=\\s|>)'
    'name': 'meta.attribute-with-value.src.html'
    'patterns': [
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.html'
        'contentName': 'src'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.html'
        'name': 'string.quoted.double.html'
        'patterns': [
          {
            'include': '#lpc-tags'
          }
        ]
      }
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.html'
        'contentName': 'src'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.html'
        'name': 'string.quoted.single.html'
        'patterns': [
          {
            'include': '#lpc-tags'
          }
        ]
      }
      {
        'include': '#unquoted-attribute'
      }
    ]
#END: SRC Attribute

  'tag-stuff':
    'patterns': [
      {
        'include': '#tag-src-attribute'
      }
      {
        'include': '#tag-href-attribute'
      }
      {
        'include': '#tag-class-attribute'
      }
      {
        'include': '#tag-style-attribute'
      }
      {
        'include': '#tag-id-attribute'
      }
      {
        'include': '#tag-generic-attribute'
      }
      {
        'include': '#string-double-quoted'
      }
      {
        'include': '#string-single-quoted'
      }
      {
        'include': '#embedded-code'
      }
      {
        'include': '#unquoted-attribute'
      }
    ]

  'unquoted-attribute':
    'match': '(?<==)(?:[^\\s<>/\'"]|/(?!>))+'
    'name': 'string.unquoted.html'
    'patterns': [
      {
        'include': '#lpc-tags'
      }
    ]

  'lpc-tags':
    'patterns': [
      {
        'include': '#lpc-EBP-Replacement-Tokens'
      }
      {
        'include': '#lpc-EBP-AutomatedTemplate-Replacement-Tokens'
      }
      {
        'include': '#lpc-EBP-Item-Template-Tokens'
      }
      {
        'include': '#lpc-CutAndPaste-Tokens'
      }
      {
        'include': '#lpc-Numbers'
      }
    ]

  'lpc-Numbers':
    'match': '([0-9]px|[0-9]pt|[0-9]%|[0-9])'
    'name': 'Numbers'

  'lpc-EBP-Replacement-Tokens':
    'begin': '({)((?!AC)[a-zA-Z]++)'
    'captures':
      '0':
        'name': 'LPCEBPReplacementTokens'
    'end': '}'
    'name': 'LPCEBPReplacementTokens'

  'lpc-EBP-AutomatedTemplate-Replacement-Tokens':
    'begin': '({)(AC[a-zA-Z\_]++)'
    'captures':
      '0':
        'name': 'LPCEBPAutomatedTemplateReplacementTokens'
    'end': '}'
    'name': 'LPCEBPAutomatedTemplateReplacementTokens'

  'lpc-EBP-Item-Template-Tokens':
    'begin': '({)([0-9]++)'
    'captures':
      '0':
        'name': 'LPCEBPItemTemplateTokens'
    'end': '}'
    'name': 'LPCEBPItemTemplateTokens'

  'lpc-CutAndPaste-Tokens':
    'match': 'LPC[A-Z]+'
    'name': 'LPCCutAndPasteTokens'

  'lpc-CSS-Units':
    'match': '(%|ch|cm|em|ex|in|lh|mm|Q|pc|pt|px|rem|vh|vw|vmax|vmin)'
    'name': 'LPCCSSUnits'

  'lpc-CSS-Numbers':
    'match': '[0-9]'
    'name': 'LPCCSSNumbers'

  'Inline-Style-Properties':
    'match': '([^:]*)(:)([^;]*)(;)'
    'captures':
      '1':
        'name': 'InlineStyleProperty'
      '2':
        'name': 'InlineCSSSeperators'
      '3':
        'name': 'InlineStylePropertyValue'
        'patterns': [
          {
            'include': '#lpc-CSS-Units'
          }
          {
            'include': '#lpc-CSS-Numbers'
          }
        ]
      '4':
        'name': 'InlineCSSTerminators'

#BEGIN: Style Attribute - This is to handle Style Attribute Stylings
  'tag-style-attribute':
    'begin': '\\b(style)\\b\\s*(=)'
    'captures':
      '1':
        'name': 'style.html'
      '2':
        'name': 'punctuation.separator.key-value.html'
    'end': '(?<=\'|")|(?=\\s|>)'
    'name': 'meta.attribute-with-value.style.html'
    'patterns': [
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.html'
        'contentName': 'style'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.html'
        'name': 'string.quoted.double.html'
        'patterns': [
          {
            'include': '#lpc-tags'
          }
          {
            'include': '#Inline-Style-Properties'
          }
        ]
      }
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.html'
        'contentName': 'style'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.html'
        'name': 'string.quoted.single.html'
        'patterns': [
          {
            'include': '#lpc-tags'
          }
          {
            'include': '#Inline-Style-Properties'
          }
        ]
      }
    ]
#END: Style Attribute
